{
  "info": {
    "_postman_id": "c771897f-77bc-4f5c-a5da-6ea1bdf205cc",
    "name": "Accounts API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "25492819"
  },
  "item": [
    {
      "name": "/instances",
      "item": [
        {
          "name": "Create Instance",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Instance with database defaults\",\n  \"ecoZUID\": \"35-e0aff1d7f5-hr6cww\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "instances"]
            },
            "description": "Gets a single instance"
          },
          "response": []
        },
        {
          "name": "Create Instance with an ecosystem ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Instance Name\",\n    \"ecoZUID\": \"{{ecosystem_zuid}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "instances"]
            },
            "description": "Gets a single instance"
          },
          "response": []
        },
        {
          "name": "Verify DNS",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"domain\": \"www.google.com\",\n  \"aRecord\": \"172.217.14.68\",\n  \"cName\": \"www.google.com\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/dns",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "instances", "dns"]
            },
            "description": "Verifies a DNS record matches a CName or A record"
          },
          "response": []
        },
        {
          "name": "Get Instance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}"
              ]
            },
            "description": "Gets a single instance by it's ZUID"
          },
          "response": []
        },
        {
          "name": "Get All Instances",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Origin",
                "value": "www",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "instances"]
            },
            "description": "Gets all instances a user has access to."
          },
          "response": []
        },
        {
          "name": "Get All Invited Instances",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/invites",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "instances", "invites"]
            },
            "description": "Gets all instances a user has been invited to."
          },
          "response": []
        },
        {
          "name": "Get Instance Users",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/users",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "users"
              ]
            },
            "description": "Gets a single instance's users"
          },
          "response": []
        },
        {
          "name": "Get Instance Users With Roles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/users/roles",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "users",
                "roles"
              ]
            },
            "description": "Gets a single instance's users with their instance-based role attached."
          },
          "response": []
        },
        {
          "name": "Get Instance Pending Users",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/users/pending",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "users",
                "pending"
              ]
            },
            "description": "Gets a single instance's pending users."
          },
          "response": []
        },
        {
          "name": "Get Instance Companies",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/companies",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "companies"
              ]
            },
            "description": "Gets a single instance's companies."
          },
          "response": []
        },
        {
          "name": "Update Instance",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n        \n        \"ecoID\": 26054,\n        \"ecoZUID\": {{ecosystem_zuid}},\n        \"randomHashID\": \"1xdz3j0p\",\n        \"domain\": \"voyagerpreprod.zesty.dev\",\n        \"name\": \"Voyager_PreProd\",\n        \"planID\": 17,\n        \"cancelledReason\": null,\n        \"createdByUserZUID\": \"5-defe88c2be-v0k4hd\",\n        \"prefs\": null,\n        \"useTLS\": false,\n        \"blueprintID\": 1,\n        \"blueprintZUID\": \"14-64329e0-555644\",\n        \"requiresTwoFactor\": 0,\n        \"legacy\": false,\n        \"screenshotURL\": null,\n        \"createdAt\": \"2022-07-29T00:44:09Z\",\n        \"updatedAt\": \"2022-07-29T00:44:10Z\"\n    }"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}"
              ]
            },
            "description": "Update permissions for a given user and content instance. Takes one of following values for thea query param `action`.\n- `updateEcosystem`\n- `updateDomain`\n- `updateBlueprint`\n- `purgeCache`"
          },
          "response": [
            {
              "name": "Update Instance and Purge Cache",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}?action=purgeCache",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "purgeCache",
                      "description": "Purges Cache"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Update Instance Domain",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"ecoZUID\": \"{{ecosystem_zuid}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}?action=updateDomain",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "updateDomain",
                      "description": "Update the instance's domain"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Update Instance Blueprint",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"blueprintID\": {{blueprint_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}?action=updateBlueprint",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "updateBlueprint",
                      "description": "Updates Instance's Blueprint"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Update Instance Ecosystem",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"domain\": \"{{domain_name}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}?action=updateEcosystem",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "updateEcosystem",
                      "description": "Update an Instance's Ecosystem"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "Update Instance Blueprint",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"zuid\": \"{{blueprint_zuid}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/blueprints",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "blueprints"
              ]
            },
            "description": "**Erases the current instance and replaces instance with the specified blueprint**\n\n**Warning:** This is a destructive action and is **NOT** reversible."
          },
          "response": []
        },
        {
          "name": "Purge Instance",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{site_zuid}}?action=purgeCache",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{site_zuid}}"
              ],
              "query": [
                {
                  "key": "action",
                  "value": "purgeCache",
                  "description": "Purge Instance's CDN Cache"
                }
              ]
            },
            "description": "Update permissions for a given user and content instance. Takes one of following values for thea query param `action`.\n- `updateEcosystem`\n- `updateDomain`\n- `updateBlueprint`\n- `purgeCache`"
          },
          "response": [
            {
              "name": "Update Instance and Purge Cache",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}?action=purgeCache",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "purgeCache",
                      "description": "Purges Cache"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Update Instance Ecosystem",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"domain\": \"{{domain_name}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}?action=updateEcosystem",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "updateEcosystem",
                      "description": "Update an Instance's Ecosystem"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Update Instance Domain",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"ecoZUID\": \"{{ecosystem_zuid}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}?action=updateDomain",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "updateDomain",
                      "description": "Update the instance's domain"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Update Instance Blueprint",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"blueprintID\": {{blueprint_id}}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}?action=updateBlueprint",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "updateBlueprint",
                      "description": "Updates Instance's Blueprint"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "Delete Instance",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}"
              ]
            },
            "description": "Deletes a single instance"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/instances/domains",
      "item": [
        {
          "name": "Create Domain",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"branch\": \"live\",\n    \"domain\": \"{{domain_name}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/domains",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "domains"
              ]
            },
            "description": "Create a domain for a given instance"
          },
          "response": []
        },
        {
          "name": "Update Domain",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"domain\": \"{{domain_name}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/domains/{{domain_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "domains",
                "{{domain_zuid}}"
              ]
            },
            "description": "Update a single domain"
          },
          "response": []
        },
        {
          "name": "Get Domain",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/domains/{{domain_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "domains",
                "{{domain_zuid}}"
              ]
            },
            "description": "Gets a single instance"
          },
          "response": []
        },
        {
          "name": "Delete Domain",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/domains/{{domain_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "domains",
                "{{domain_zuid}}"
              ]
            },
            "description": "Deletes a single instance"
          },
          "response": []
        },
        {
          "name": "Get All Domains",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/domains",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "domains"
              ]
            },
            "description": "Gets all domains associated with an instance."
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/users",
      "item": [
        {
          "name": "Get User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Origin",
                "value": "Zesty.com",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "users", "{{user_zuid}}"]
            },
            "description": "Gets a single user"
          },
          "response": []
        },
        {
          "name": "Get User Instances",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}/instances",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "users",
                "{{user_zuid}}",
                "instances"
              ]
            },
            "description": "Gets a single user's instances"
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\":\"first\", \n    \"lastName\":\"last\", \n    \"email\":\"test@email.com\",\n    \"password\": \"password\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "users"]
            },
            "description": "Creates a single user. Returns hydrated user error."
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}?action=updatePassword",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "users", "{{user_zuid}}"],
              "query": [
                {
                  "key": "action",
                  "value": "updatePassword",
                  "description": "Updates the user's password"
                }
              ]
            },
            "description": "Update a user"
          },
          "response": [
            {
              "name": "Update User to enable to 2FA",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}?action=enableAuthy",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "users",
                    "{{user_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "enableAuthy",
                      "description": "Registers the user with Authy for 2FA"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Update User Password",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"oldPassword\": \"old_password\",\n\t\"password\": \"new_password\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}?action=updatePassword",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "users",
                    "{{user_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "updatePassword",
                      "description": "Update user password"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 17 Dec 2019 22:15:06 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Content-Length",
                  "value": "141"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": ""
            }
          ]
        },
        {
          "name": "Delete User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "users", "{{user_zuid}}"]
            },
            "description": "Deletes a single user"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/users/emails",
      "item": [
        {
          "name": "Add Unverified Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"First Last\",\n  \"address\": \"{{email_address}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/emails",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "users", "emails"]
            },
            "description": "Adds an email address as unverified; sends verification email"
          },
          "response": []
        },
        {
          "name": "Delete User Email",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/emails?address={{url_encoded_email}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "users", "emails"],
              "query": [
                {
                  "key": "address",
                  "value": "{{url_encoded_email}}"
                }
              ]
            },
            "description": "Removes a verified or unverified email address."
          },
          "response": []
        },
        {
          "name": "Get User Emails",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/emails",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "users", "emails"]
            },
            "description": "Adds an email address as unverified; sends verification email"
          },
          "response": []
        },
        {
          "name": "Verify Email Address",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/emails/verifications?address={{email_address}}&verificationCode={{verification_code}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "users",
                "emails",
                "verifications"
              ],
              "query": [
                {
                  "key": "address",
                  "value": "{{email_address}}"
                },
                {
                  "key": "verificationCode",
                  "value": "{{verification_code}}"
                }
              ]
            },
            "description": "Verifies an email address."
          },
          "response": []
        },
        {
          "name": "Resend Email Verification",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/emails/verifications?address={{url_encoded_email}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "users",
                "emails",
                "verifications"
              ],
              "query": [
                {
                  "key": "address",
                  "value": "{{url_encoded_email}}"
                }
              ]
            },
            "description": "Resends the email used for verifying an email address"
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{authorization}}",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/companies",
      "item": [
        {
          "name": "Get Company",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/companies/{{company_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "companies",
                "{{company_zuid}}"
              ]
            },
            "description": "Get a single company by it's ZUID"
          },
          "response": []
        },
        {
          "name": "Get All Companies",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/companies",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "companies"]
            },
            "description": "Get a list of all companies."
          },
          "response": []
        },
        {
          "name": "Create Company",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Company Name\",\n    \"description\": \"Description goes here\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/companies",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "companies"]
            },
            "description": "Creates a single company"
          },
          "response": []
        },
        {
          "name": "Delete Company",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\":\"First\", \n    \"lastName\":\"Last\", \n    \"email\": \"{{email_address}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/companies/{{company_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "companies",
                "{{company_zuid}}"
              ]
            },
            "description": "Deletes a single company"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/invites",
      "item": [
        {
          "name": "Get Invite",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/invites/{{invite_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "invites", "{{invite_zuid}}"]
            },
            "description": "Gets a single user"
          },
          "response": []
        },
        {
          "name": "Get All Invites",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/invites",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "invites"]
            },
            "description": "Gets a single user's invites"
          },
          "response": []
        },
        {
          "name": "Create Invite",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"inviteeName\": \"Firstname Lastname\",\n  \"inviteeEmail\": \"test@email.com\",\n  \"entityZUID\": \"{{instance_zuid}}\",\n  \"accessLevel\": \"{{test_access_level}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/invites",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "invites"]
            },
            "description": "Creates a single invite"
          },
          "response": []
        },
        {
          "name": "Respond to Invite",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/invites/{{invite_zuid}}?action=accept",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "invites",
                "{{invite_zuid}}"
              ],
              "query": [
                {
                  "key": "action",
                  "value": "accept",
                  "description": "Accept an invite."
                }
              ]
            },
            "description": "Responds to an invite based on the query parameter provided. Takes one of following values for the query param `action`.\n- `accept`\n- `decline`\n- `cancel`"
          },
          "response": [
            {
              "name": "Cancel an Invite",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/invites/{{invite_zuid}}?action=cancel",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "invites",
                    "{{invite_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "cancel",
                      "description": "Cancel an invite; you must have sufficient privilege to perform this."
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Accept an Invite",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/invites/{{invite_zuid}}?action=accept",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "invites",
                    "{{invite_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "accept",
                      "description": "Accept an invite."
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Decline an Invite",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/invites/{{invite_zuid}}?action=decline",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "invites",
                    "{{invite_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "decline",
                      "description": "Decline an invite."
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "Delete Invite",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/invites/{{invite_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "invites", "{{invite_zuid}}"]
            },
            "description": "Deletes a single company"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/blueprints",
      "item": [
        {
          "name": "Get Blueprint",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/blueprints/{{blueprint_id}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "blueprints",
                "{{blueprint_id}}"
              ]
            },
            "description": "Gets a single blueprint"
          },
          "response": []
        },
        {
          "name": "Get All Blueprints",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/blueprints",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "blueprints"]
            },
            "description": "Gets all blueprints available to a user"
          },
          "response": []
        },
        {
          "name": "Create Blueprint",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"blueprint name\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/blueprints",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "blueprints"]
            },
            "description": "Gets a single blueprint"
          },
          "response": []
        },
        {
          "name": "Update Blueprint",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"new blueprint name\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/blueprints/{{blueprint_id}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "blueprints",
                "{{blueprint_id}}"
              ]
            },
            "description": "Updates a blueprint with the given values."
          },
          "response": []
        },
        {
          "name": "Delete Blueprint",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/blueprints/{{blueprint_id}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "blueprints",
                "{{blueprint_id}}"
              ]
            },
            "description": "Delete a single blueprint"
          },
          "response": []
        },
        {
          "name": "Get Instance's Blueprint",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/blueprints",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "blueprints"
              ]
            },
            "description": "Get blueprints for a given instance"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/teams",
      "item": [
        {
          "name": "Get Team",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/{{team_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "teams", "{{team_zuid}}"]
            },
            "description": "Gets a single Team by its ZUID"
          },
          "response": []
        },
        {
          "name": "Create Team",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Name\": \"Example Team Name\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "teams"]
            },
            "description": "Gets a single team"
          },
          "response": []
        },
        {
          "name": "Update Team",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Defenders\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/{{team_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "teams", "{{team_zuid}}"]
            },
            "description": "Updates a team with the given values."
          },
          "response": []
        },
        {
          "name": "Delete Team",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/{{team_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "teams", "{{team_zuid}}"]
            },
            "description": "Delete a single team"
          },
          "response": []
        },
        {
          "name": "Get All Teams",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "teams"]
            },
            "description": "Gets a all teams associated with the user"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/team/instances",
      "item": [
        {
          "name": "Add Team to Instance",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"teamZUID\": \"{{team_zuid}}\",\n  \"roleZUID\": \"{{role_zuid}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/teams",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "teams"
              ]
            },
            "description": "Creates a single team and adds it to an instance."
          },
          "response": []
        },
        {
          "name": "Get All Instance's Teams",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/teams",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "teams"
              ]
            },
            "description": "Gets a all Teams associated with the Instance."
          },
          "response": []
        },
        {
          "name": "Get All Team's Instances",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/{{team_zuid}}/instances",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "teams",
                "{{team_zuid}}",
                "instances"
              ]
            },
            "description": "Gets a all Instances associated with the Team."
          },
          "response": []
        },
        {
          "name": "Remove Team from Instance",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/teams/{{team_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "teams",
                "{{team_zuid}}"
              ]
            },
            "description": "Removes a  ALL Team members from a given Instance."
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/teams/invites",
      "item": [
        {
          "name": "Get Team Invite",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/invites/{{team_invite_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "teams",
                "invites",
                "{{team_invite_zuid}}"
              ]
            },
            "description": "Gets a single Team invite"
          },
          "response": []
        },
        {
          "name": "Get All Team Invites",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/invites",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "teams", "invites"]
            },
            "description": "Gets a single user's Team invites"
          },
          "response": []
        },
        {
          "name": "Create Team Invite",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"teamZUID\": \"\",\n  \"inviteeName\": \"Test testington\",\n  \"inviteeEmail\": \"test@email.com\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/invites",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "teams", "invites"]
            },
            "description": "Creates a single invite for the given Team"
          },
          "response": []
        },
        {
          "name": "Respond to Team Invite",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/invites/{{team_invite_zuid}}?action=accept&=decline&=cancel",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "teams",
                "invites",
                "{{team_invite_zuid}}"
              ],
              "query": [
                {
                  "key": "action",
                  "value": "accept",
                  "description": "Accept an invite"
                },
                {
                  "key": "",
                  "value": "decline",
                  "description": "Decline an invite"
                },
                {
                  "key": "",
                  "value": "cancel",
                  "description": "Cancel an invite; you must have sufficient privilege to perform this"
                }
              ]
            },
            "description": "Responds to a team invite based on the query parameter provided\n\n- ?action=accept\t:: Accept an invite.\n- ?action=decline\t:: Decline an invite.\n- ?action=cancel\t:: Cancel an invite; you must have sufficient privilege to perform this"
          },
          "response": [
            {
              "name": "Accept a Team Invite",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/invites/{{team_invite_zuid}}?action=accept",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "teams",
                    "invites",
                    "{{team_invite_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "accept",
                      "description": "Accept an invite"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Decline Team Invite",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/invites/{{team_invite_zuid}}?action=decline",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "teams",
                    "invites",
                    "{{team_invite_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "decline",
                      "description": "Decline an invite"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Cancel Team Invite",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/invites/{{team_invite_zuid}}?action=cancel",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "teams",
                    "invites",
                    "{{team_invite_zuid}}"
                  ],
                  "query": [
                    {
                      "key": "action",
                      "value": "cancel",
                      "description": "Cancel an invite. You must have sufficient privilege to perform this"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "Delete Team Invite",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/invites/{{team_invite_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "teams",
                "invites",
                "{{team_invite_zuid}}"
              ]
            },
            "description": "Deletes a single invite for a Team"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/teams/members",
      "item": [
        {
          "name": "Get Team Members",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/{{team_zuid}}/users",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "teams",
                "{{team_zuid}}",
                "users"
              ]
            },
            "description": "Gets the members of a single Team"
          },
          "response": []
        },
        {
          "name": "Update Team Member",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \n  \"admin\": true\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/{{team_zuid}}/users/{{user_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "teams",
                "{{team_zuid}}",
                "users",
                "{{user_zuid}}"
              ]
            },
            "description": "Updates the team role of a single user."
          },
          "response": []
        },
        {
          "name": "Remove Team Member",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/{{team_zuid}}/users/{{user_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "teams",
                "{{team_zuid}}",
                "users",
                "{{user_zuid}}"
              ]
            },
            "description": "Removes a single user from a team."
          },
          "response": []
        },
        {
          "name": "Get Team Members Pending",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/teams/{{team_zuid}}/users/pending",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "teams",
                "{{team_zuid}}",
                "users",
                "pending"
              ]
            },
            "description": "Gets the pending members of a single Team"
          },
          "response": []
        }
      ]
    },
    {
      "name": "/roles",
      "item": [
        {
          "name": "Get Instance Roles",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/roles",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "roles"
              ]
            },
            "description": "Gets a single instance's roles"
          },
          "response": []
        },
        {
          "name": "Create Instance Roles",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/roles",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "roles"
              ]
            },
            "description": "Creates a single instance's base roles."
          },
          "response": []
        },
        {
          "name": "Get Instance Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/roles/{{role_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "roles",
                "{{role_zuid}}"
              ]
            },
            "description": "Gets a role by its zuid"
          },
          "response": []
        },
        {
          "name": "Get Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles/{{role_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "roles", "{{role_zuid}}"]
            },
            "description": "Gets a role by its zuid"
          },
          "response": []
        },
        {
          "name": "Delete Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles/{{role_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "roles", "{{role_zuid}}"]
            },
            "description": "Deletes a role by its zuid"
          },
          "response": []
        },
        {
          "name": "Create Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"test custom role name\",\n  \"entityZUID\": \"{{instance_zuid}}\",\n  \"systemRoleZUID\": \"{{system_role_zuid}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "roles"]
            },
            "description": "Creates a role with the provided system role as its base."
          },
          "response": []
        },
        {
          "name": "Get Roles",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "roles"]
            },
            "description": "Gets all roles associated with the current user"
          },
          "response": []
        },
        {
          "name": "Get User Roles",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}/roles",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "users",
                "{{user_zuid}}",
                "roles"
              ]
            },
            "description": "Gets a role by its zuid"
          },
          "response": []
        },
        {
          "name": "Assign User Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}/roles/{{role_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "users",
                "{{user_zuid}}",
                "roles",
                "{{role_zuid}}"
              ]
            },
            "description": "Adds an entry for the provided user and role ZUID."
          },
          "response": []
        },
        {
          "name": "Delete User Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}/roles/{{role_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "users",
                "{{user_zuid}}",
                "roles",
                "{{role_zuid}}"
              ]
            },
            "description": "Unassigns a role from a user."
          },
          "response": []
        },
        {
          "name": "Update User Role",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"roleZUID\": \"{{role_zuid}}\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/users/{{user_zuid}}/roles/{{current_role_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "users",
                "{{user_zuid}}",
                "roles",
                "{{current_role_zuid}}"
              ]
            },
            "description": "Updates the entry for the provided user and role ZUID with the `roleZUID` element in the request body. Fails if the user/role entry in the URL does not exist."
          },
          "response": []
        }
      ]
    },
    {
      "name": "/roles/granulars",
      "item": [
        {
          "name": "Get Granular Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles/{{role_zuid}}/granulars/{{resource_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "roles",
                "{{role_zuid}}",
                "granulars",
                "{{resource_zuid}}"
              ]
            },
            "description": "Gets granular role by its role and resource ZUID"
          },
          "response": []
        },
        {
          "name": "Delete Granular Role",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles/{{role_zuid}}/granulars/{{resource_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "roles",
                "{{role_zuid}}",
                "granulars",
                "{{resource_zuid}}"
              ]
            },
            "description": "Deletes a granular role by its role and resource ZUID"
          },
          "response": []
        },
        {
          "name": "Get Granular Roles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles/{{role_zuid}}/granulars",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "roles",
                "{{role_zuid}}",
                "granulars"
              ]
            },
            "description": "Gets granular roles by their role zuid"
          },
          "response": []
        },
        {
          "name": "Update Granular Roles",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": " [\n        {\n            \"resourceZUID\": \"{{item_zuid}}\",\n            \"name\": \"\",\n            \"create\": true,\n            \"read\": true,\n            \"update\": true,\n            \"delete\": false\n        }\n    ]"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles/{{role_zuid}}/granulars",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "roles",
                "{{role_zuid}}",
                "granulars"
              ]
            },
            "description": "Updates the granular roles for the give role ZUID. The resource ZUID for each granular permission must be included in the body of each update."
          },
          "response": []
        },
        {
          "name": "Create Granular Role",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"resourceZUID\": \"{{item_zuid}}\",\n    \"name\": \"\",\n    \"create\": true,\n    \"read\": true,\n    \"update\": false,\n    \"delete\": false,\n    \"publish\": false,\n    \"grant\": false\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/roles/{{role_zuid}}/granulars",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "roles",
                "{{role_zuid}}",
                "granulars"
              ]
            },
            "description": "Adds a granular role to the role with the given role ZUID."
          },
          "response": []
        }
      ]
    },
    {
      "name": "/ecosystems",
      "item": [
        {
          "name": "Create Ecosystem",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"name\": \"ecosystem_name\",\n\t\"description\": \"ecosystem description\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/ecosystems",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "ecosystems"]
            }
          },
          "response": []
        },
        {
          "name": "Get Ecosystem",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/ecosystems/{{ecosystem_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "ecosystems",
                "{{ecosystem_zuid}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Ecosystems",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/ecosystems/",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "ecosystems", ""]
            }
          },
          "response": []
        },
        {
          "name": "Update Ecosystem",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"name\": \"updated_name\",\n\t\"description\": \"updated description\"\n}\t",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/ecosystems/{{ecosystem_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "ecosystems",
                "{{ecosystem_zuid}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Ecosystem Database Defaults",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"defaultDatabaseHost\": \"1.1.1.1\",\n\t\"defaultDatabaseUser\": \"root\",\n\t\"defaultDatabasePassword\": \"pass\"\n}\t",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/ecosystems/{{ecosystem_zuid}}?action=updateDatabaseDefaults",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "ecosystems",
                "{{ecosystem_zuid}}"
              ],
              "query": [
                {
                  "key": "action",
                  "value": "updateDatabaseDefaults"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Ecosystem CDN Defaults",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"defaultCDNType\": \"AKAMAI\",\n\t\"defaultCDNPurgeURL\": \"https://location-of-cloud-purge-function.com\",\n\t\"defaultCDNPurgeAuth\": \"Secret Key\"\n}\t",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/ecosystems/{{ecosystem_zuid}}?action=updateCDNDefaults",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "ecosystems",
                "{{ecosystem_zuid}}"
              ],
              "query": [
                {
                  "key": "action",
                  "value": "updateCDNDefaults"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Ecosystem",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/ecosystems/{{ecosystem_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "ecosystems",
                "{{ecosystem_zuid}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "/webhook",
      "item": [
        {
          "name": "Create Webhook",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "type": "text",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": \"6-dec282ffc1-q0wb2p\",\n\t\"resource\": \"items\",\n\t\"eventAction\": 1,\n\t\"method\": \"GET\",\n\t\"URL\": \"https://hooks.zapier.com/hooks/catch/6583555/ba20wae/\",\n\t\"contentType\": \"application/json\",\n\t\"body\": {\n        \"text\":\" this is the body\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "webhooks"]
            },
            "description": "To create a webhook on a given instance, the user must have the following permissions on the instance:\n- Admin\n- Owner\n- Developer\n \nBody params:\n\n| field name | required\t| type |description |\n|------------|----------|------|------------|\n| `scopedResource` | yes | string | Scoped Resource refers to the service in which to listen in on webhooks. |\n| `parentResourceZUID` | no | string | Refers to a specific parent resource's ZUID. |\n| `resource` | yes | string | Refers to the ZUID or the name of a resource. |\n| `eventAction` | yes | number | The action on the resource which will trigger the webhook. |\n| `method` | yes | string | The HTTP request method that is made by the webhook. |\n| `URL` | yes | string | Destination URL for the webhook to send payload to. |\n| `contentType` | yes | string | The value used to set the HTTP header `Content-type` for the webhook request |\n| `authorization` | no | string | The Bearer token value used to set the HTTP header `Auhorization`. \n| `body` | yes | JSON | The payload body being sent to the destination URL.|\n\n\nPossible values for `scopedResource` are:\n- an instance ZUID\n- `accounts`\n\n\n**`parentResourceZUID`** \n\nIf `scopedResource` is an instance ZUID, possible values for `parentResourceZUID` are:\n- content model ZUID\n \nIf `scopedResource` is `accounts`, possible values for `parentResourceZUID` are:\n- instance ZUID\n\n\n**`resource`**\n\nIf `scopedResource` is an instance ZUID, possible values for `resource` are:\n- `models`\n- `items`\n- `publishings`\n- `fields`\n- `headtags`\n- `views`\n- `stylesheets`\n- `scripts`\n- `redirects`\n- `langs`\n- `leads`\nor its corresponding ZUIDs \n\n\nIf `scopedResource` is `accounts`, possible values for `resource` are:\n- `instances`\n- `users`\n- `invites`\n- `roles`\n- `granulars`\n- `domains`\nor its corresponding ZUIDs\n\nPossible Values for `eventAction`\n- Create: 1 \n- Update: 2\n- Delete: 3\n- Publish: 4\n- Unpublish: 5\n- UndoDelete: 6\n\n\nPossible Values for `method`\n- `POST` \n- `GET`\n\n\nPossible Values for `contentType`\n- `application/json` \n- `application/x-www-form-urlencoded`"
          },
          "response": [
            {
              "name": "Create Webhook to handle adding domain to an instance",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": null,\n\t\"resource\": \"domains\",\n\t\"eventAction\": 1,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"Instance domain has been added\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Date",
                  "value": "Fri, 13 Dec 2019 21:42:36 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "598"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-13T21:50:37.138860515Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{webhook_zuid}}\",\n        \"scopedResource\": \"{{instance_zuid}}\",\n        \"eventAction\": 1,\n        \"parentResourceZUID\": null,\n        \"resource\": \"domains\",\n        \"method\": \"POST\",\n        \"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"Instance domain has been added\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-13T21:50:37.132868933Z\",\n        \"updatedAt\": \"2019-12-13T21:50:37.132875689Z\"\n    }\n}"
            },
            {
              "name": "Create Webhook listening for Instance Role Generation",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": \"{{instance_zuid}}\",\n\t\"resource\": \"roles\",\n\t\"eventAction\": 1,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"Role for instance has been generated\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Date",
                  "value": "Fri, 13 Dec 2019 00:18:44 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "623"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-13T00:56:08.894466158Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{webhook_zuid}}\",\n        \"scopedResource\": \"{{instance_zuid}}\",\n        \"eventAction\": 1,\n        \"parentResourceZUID\": \"{{instance_zuid}}\",\n        \"resource\": \"roles\",\n        \"method\": \"POST\",\n    \t\"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"Role for instance has been generated\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-13T00:56:08.881785817Z\",\n        \"updatedAt\": \"2019-12-13T00:56:08.881811583Z\"\n    }\n}"
            },
            {
              "name": "Create webhook to look for Item Unpublish for a content model",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "type": "text",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": \"{{collection_zuid}}\",\n\t\"resource\": \"items\",\n\t\"eventAction\": 5,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"Unpublish event {{collection_zuid}} for item has been triggered\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": null,
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-16T23:42:29.611489864Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{webhook_zuid}}\",\n        \"scopedResource\": \"{{instance_zuid}}\",\n        \"eventAction\": 5,\n        \"parentResourceZUID\": \"{{collection_zuid}}\",\n        \"resource\": \"items\",\n        \"method\": \"POST\",\n        \"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"Unpublish event {{collection_zuid}} for item has been triggered\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-16T23:42:29.603760232Z\",\n        \"updatedAt\": \"2019-12-16T23:42:29.603767566Z\"\n    }\n}"
            },
            {
              "name": "Create Webhook Specific Content Model Item Publish ",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": \"{{collection_zuid}}\",\n\t\"resource\": \"items\",\n\t\"eventAction\": 4,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"Publish event {{collection_zuid}} for item has been triggered\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Date",
                  "value": "Thu, 12 Dec 2019 22:38:24 GMT"
                },
                {
                  "key": "Content-Length",
                  "value": "635"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-13T21:50:37.138860515Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{webhook_zuid}}\",\n        \"scopedResource\": \"{{instance_zuid}}\",\n        \"eventAction\": 4,\n        \"parentResourceZUID\": \"{{collection_zuid}}\",\n        \"resource\": \"items\",\n        \"method\": \"POST\",\n        \"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"Publish event {{collection_zuid}} for item has been triggered\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-13T21:50:37.132868933Z\",\n        \"updatedAt\": \"2019-12-13T21:50:37.132875689Z\"\n    }\n}"
            },
            {
              "name": "Create webhook to look for item creation for a specific content model",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": \"{{collection_zuid}}\",\n\t\"resource\": \"items\",\n\t\"eventAction\": 1,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"New {{collection_zuid}} item created\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Date",
                  "value": "Thu, 12 Dec 2019 18:48:36 GMT"
                },
                {
                  "key": "Content-Length",
                  "value": "602"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-12T22:38:24.863808495Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{webhook_zuid}}\",\n    \t\"scopedResource\": \"{{instance_zuid}}\",\n\t\t\"parentResourceZUID\": \"{{collection_zuid}}\",\n        \"eventAction\": 1,\n        \"resource\": \"items\",\n        \"method\": \"POST\",\n       \t\"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"New {{collection_zuid}} item created\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-12T22:38:24.749605126Z\",\n        \"updatedAt\": \"2019-12-12T22:38:24.74961072Z\"\n    }\n}"
            },
            {
              "name": "Create Webhook to handle domain update",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": null,\n\t\"resource\": \"domains\",\n\t\"eventAction\": 2,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"Instance domain has been updated\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Date",
                  "value": "Fri, 13 Dec 2019 21:38:00 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "580"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-13T21:42:36.316903727Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{webhook_zuid}}\",\n        \"scopedResource\": \"{{instance_zuid}}\",\n        \"eventAction\": 2,\n        \"parentResourceZUID\": null,\n        \"resource\": \"domains\",\n        \"method\": \"POST\",\n        \"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"Instance domain has been updated\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-13T21:42:36.309766223Z\",\n        \"updatedAt\": \"2019-12-13T21:42:36.309775775Z\"\n    }\n}"
            },
            {
              "name": "Create Webhook to listen on invite creation",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": null,\n\t\"resource\": \"invites\",\n\t\"eventAction\": 1,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"Invite created\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Date",
                  "value": "Fri, 13 Dec 2019 21:20:58 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "590"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-13T21:38:00.947854465Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{webhook_zuid}}\",\n        \"scopedResource\": \"{{instance_zuid}}\",\n        \"eventAction\": 1,\n        \"parentResourceZUID\": null,\n        \"resource\": \"invites\",\n        \"method\": \"POST\",\n        \"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"Invite created\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-13T21:38:00.940145987Z\",\n        \"updatedAt\": \"2019-12-13T21:38:00.940153199Z\"\n    }\n}"
            },
            {
              "name": "Create Webhook for User Role Update",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": \"{{user_zuid}}\",\n\t\"resource\": \"roles\",\n\t\"eventAction\": 2,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"Role for user {{user_zuid}} has been updated\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Date",
                  "value": "Fri, 13 Dec 2019 00:00:28 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "609"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-13T00:18:44.977620437Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{webhook_zuid}}\",\n        \"scopedResource\": \"{{instance_zuid}}\",\n        \"eventAction\": 2,\n        \"parentResourceZUID\": \"{{user_zuid}}\",\n        \"resource\": \"roles\",\n        \"method\": \"POST\",\n        \"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"Role for user {{user_zuid}} has been updated\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-13T00:18:44.971926604Z\",\n        \"updatedAt\": \"2019-12-13T00:18:44.971932097Z\"\n    }\n}"
            },
            {
              "name": "Create Webhook to handle invite responses",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"scopedResource\": \"{{instance_zuid}}\",\n\t\"parentResourceZUID\": null,\n\t\"resource\": \"invites\",\n\t\"eventAction\": 2,\n\t\"method\": \"POST\",\n\t\"URL\": \"{{webhook_url}}\",\n\t\"contentType\": \"application/json\",\n\t\"authorization\": \"\",\n\t\"body\": {\n\t\t\"text\": \"Invite response received\"\n\t}\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "webhooks"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "JSON",
              "header": [
                {
                  "key": "Date",
                  "value": "Fri, 13 Dec 2019 21:14:44 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "615"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2019-12-13T21:20:58.235232598Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"{{wehook_zuid}}\",\n        \"scopedResource\": \"{{instance_zuid}}\",\n        \"eventAction\": 2,\n        \"parentResourceZUID\": null,\n        \"resource\": \"invites\",\n        \"method\": \"POST\",\n        \"URL\": \"{{webhook_url}}\",\n        \"contentType\": \"application/json\",\n        \"authorization\": \"\",\n        \"body\": {\n            \"text\": \"Invite response received\"\n        },\n        \"createdByUserZUID\": \"{{user_zuid}}\",\n        \"description\": null,\n        \"createdAt\": \"2019-12-13T21:20:58.224616391Z\",\n        \"updatedAt\": \"2019-12-13T21:20:58.224622904Z\"\n    }\n}"
            }
          ]
        },
        {
          "name": "Retrieve Webhook",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks/{{webhook_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "webhooks",
                "{{webhook_zuid}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Retreive Webhooks for an Instance",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/webhooks/",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "webhooks",
                ""
              ]
            },
            "description": "Get multiple webhooks for a given instance. To retrieve webhooks, user must have the following permissions for the given instance:\n- Admin\n- Owner\n- Developer"
          },
          "response": []
        },
        {
          "name": "Delete Webhook",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{APP_SID}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/webhooks/{{webhook_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "webhooks",
                "{{webhook_zuid}}"
              ]
            },
            "description": "Deletes a single webhook. To delete a webhook for a given instance, the user must have the following permissions on the instance:\n- Admin\n- Owner\n- Developer"
          },
          "response": []
        }
      ]
    },
    {
      "name": "/tokens",
      "item": [
        {
          "name": "Create Token",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"roleZUID\": \"30-aa95a59bbe-j3s9m1\",\n\t\"name\": \"Wei's Cyberpunk Character Sheets\"\n}"
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/tokens",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "tokens"]
            },
            "description": "Creates a new developer token. \nUpon successful creation, copy and save the returned token value from the response. \n**This is the only time the token will be available and visible.**"
          },
          "response": []
        },
        {
          "name": "Get Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/tokens/{{token_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "tokens", "{{token_zuid}}"]
            },
            "description": "Gets information about a given token based on its ZUID. \n**NOTE - the token will not be visible upon retrieval**"
          },
          "response": []
        },
        {
          "name": "Get Instance Tokens",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authorization}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{site_zuid}}/tokens",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{site_zuid}}",
                "tokens"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Token",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/tokens/{{token_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "tokens", "{{token_zuid}}"]
            },
            "description": "Updates a single token by its ZUID. The optional query param `action` can be one of the following values:\n- `renew`"
          },
          "response": [
            {
              "name": "Update Token",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Updated token name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/tokens",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "tokens"]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            },
            {
              "name": "Renew Token",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "name": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"name\": \"Updated token name\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/tokens?action=renew ",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "tokens"],
                  "query": [
                    {
                      "key": "action",
                      "value": "renew ",
                      "description": "Renews the token"
                    }
                  ]
                }
              },
              "_postman_previewlanguage": null,
              "header": null,
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "Delete Token",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/tokens/{{token_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "tokens", "{{token_zuid}}"]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{authorization}}",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "/apps",
      "item": [
        {
          "name": "Register App",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"label\": \"Example App\",\n    \"name\": \"example_app\",\n    \"publisher\": \"Zesty.io\",\n    \"url\": \"https://www.exampleapp.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "apps"]
            },
            "description": "An application needs to be *registered* with Zesty.io before it can be *installed*. Because application registration and application installation have a one-to-many relationship, applications are immutable(aside from the **public** field).\n\nApplications are either public or private. Private applications are only available to the user who created it and are approved by default. Public applications require approval before they're made available to all Zesty.io users. Applications are private unless manually promoted to public by Zesty.io staff - reach out to [support@zesty.io](mailto:support@zesty.io) to get your private application promoted to public.\n\n| name | description |\n| --- | --- |\n| `label` | \\[string\\] Required. Unique Display Name |\n| `name` | \\[string\\] Required. Unique Parsley Reference Name |\n| `url` | \\[string\\] Required. Unique (secure) URL where the application is hosted |\n| `publisher` | \\[string\\] Required. The party which registered the application |\n| `description` | \\[string\\] Additional context |"
          },
          "response": [
            {
              "name": "Register App",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"label\": \"Example App\",\n    \"name\": \"example_app\",\n    \"publisher\": \"Zesty.io\",\n    \"url\": \"https://www.exampleapp.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:18:36 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "410"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:18:36.351744052Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"80-caafcdb0d0-2jdbg5\",\n        \"name\": \"example_app\",\n        \"label\": \"Example App\",\n        \"publisher\": \"Zesty.io\",\n        \"description\": null,\n        \"url\": \"https://www.exampleapp.com\",\n        \"public\": false,\n        \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n        \"createdAt\": \"2022-04-25T17:18:36.347289176Z\",\n        \"updatedAt\": \"2022-04-25T17:18:36.34729655Z\"\n    }\n}"
            },
            {
              "name": "Register App With Description",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"label\": \"Example App Two\",\n    \"name\": \"example_app_two\",\n    \"publisher\": \"Zesty.io\",\n    \"url\": \"https://www.exampleapptwo.com\",\n    \"description\": \"Zesty.io's second example application\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:34:55 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "457"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:34:55.066204809Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"80-f6cbafb0cc-d28k0h\",\n        \"name\": \"example_app_two\",\n        \"label\": \"Example App Two\",\n        \"publisher\": \"Zesty.io\",\n        \"description\": \"Zesty.io's second example application\",\n        \"url\": \"https://www.exampleapptwo.com\",\n        \"public\": false,\n        \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n        \"createdAt\": \"2022-04-25T17:34:55.062683608Z\",\n        \"updatedAt\": \"2022-04-25T17:34:55.062688373Z\"\n    }\n}"
            },
            {
              "name": "Register App With Insecure URL",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"label\": \"Example App\",\n    \"name\": \"example_app\",\n    \"publisher\": \"Zesty.io\",\n    \"url\": \"http://www.exampleapp.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps"]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:29:23 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "183"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:29:23.21949702Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"error\": \"Bad Request: validation error: url must use https protocol\"\n}"
            },
            {
              "name": "Register App With Duplicate Name",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"label\": \"Example App\",\n    \"name\": \"example_app\",\n    \"publisher\": \"Zesty.io\",\n    \"url\": \"https://www.exampleapp.com\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps"]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:32:17 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Content-Length",
                  "value": "170"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:32:17.791706612Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"error\": \"duplicate entry 'example_app' for key 'name'\"\n}"
            }
          ]
        },
        {
          "name": "Get Apps",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "apps"]
            },
            "description": "Get public applications and private applications registered by the user."
          },
          "response": [
            {
              "name": "Get Apps",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:38:07 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:38:07.52536362Z\",\n        \"totalResults\": 2,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 2\n    },\n    \"data\": [\n        {\n            \"ZUID\": \"80-d8f5a1f7c3-6h02sm\",\n            \"name\": \"example_app_two\",\n            \"label\": \"Example App Two\",\n            \"publisher\": \"Zesty.io\",\n            \"description\": \"Zesty.io's second example application\",\n            \"url\": \"https://www.exampleapptwo.com\",\n            \"public\": false,\n            \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n            \"createdAt\": \"2022-04-25T17:37:11Z\",\n            \"updatedAt\": \"2022-04-25T17:37:11Z\"\n        },\n        {\n            \"ZUID\": \"80-e88f85feec-7rs7sx\",\n            \"name\": \"example_app\",\n            \"label\": \"Example App\",\n            \"publisher\": \"Zesty.io\",\n            \"description\": null,\n            \"url\": \"https://www.exampleapp.com\",\n            \"public\": false,\n            \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n            \"createdAt\": \"2022-04-25T17:36:59Z\",\n            \"updatedAt\": \"2022-04-25T17:36:59Z\"\n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Get App",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps/{{app_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "apps", "{{app_zuid}}"]
            }
          },
          "response": [
            {
              "name": "Get App",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps/{{app_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps", "{{app_zuid}}"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:52:03 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:52:03.670274837Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"80-e88f85feec-7rs7sx\",\n        \"name\": \"example_app\",\n        \"label\": \"Example App\",\n        \"publisher\": \"Zesty.io\",\n        \"description\": null,\n        \"url\": \"https://www.exampleapp.com\",\n        \"public\": false,\n        \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n        \"createdAt\": \"2022-04-25T17:36:59Z\",\n        \"updatedAt\": \"2022-04-25T17:36:59Z\"\n    }\n}"
            },
            {
              "name": "Get Nonexistent App",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps/{{app_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps", "{{app_zuid}}"]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:52:37 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:52:37.615148002Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"message\": \"No Results Found for ZUID: 80-e88f85feec-7rs7sy\"\n}"
            },
            {
              "name": "Get Private App Registered By A Different User",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps/{{app_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps", "{{app_zuid}}"]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:54:18 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:54:18.036113189Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"error\": \"Forbidden Action\"\n}"
            }
          ]
        },
        {
          "name": "Delete App",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps/{{app_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": ["{{accounts_api_version}}", "apps", "{{app_zuid}}"]
            }
          },
          "response": [
            {
              "name": "Delete App",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/apps/{{app_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": ["{{accounts_api_version}}", "apps", "{{app_zuid}}"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 17:57:36 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T17:57:36.264680292Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"80-d8f5a1f7c3-6h02sm\",\n        \"name\": \"example_app_two\",\n        \"label\": \"Example App Two\",\n        \"publisher\": \"Zesty.io\",\n        \"description\": \"Zesty.io's second example application\",\n        \"url\": \"https://www.exampleapptwo.com\",\n        \"public\": false,\n        \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n        \"createdAt\": \"2022-04-25T17:37:11Z\",\n        \"updatedAt\": \"2022-04-25T17:37:11Z\"\n    }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "/instances/app-installs",
      "item": [
        {
          "name": "Install App",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"appZUID\": \"80-e88f85feec-7rs7sx\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "app-installs"
              ]
            },
            "description": "Install, on an instance, a registered application.\n\nUsers can install public applications or private applications they registered.\n\nApp installations are immutable. And this endpoint is not idempotent. Meaning calling it multiple times will result in duplicate application installation entities.\n\n| name | description |\n| --- | --- |\n| `appZUID` | \\[zuid\\] Required. Application ZUID |"
          },
          "response": [
            {
              "name": "Install App",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"appZUID\": \"80-e88f85feec-7rs7sx\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 20:47:41 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "346"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T20:47:41.045911697Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"81-d4ff80d1e9-2n6clr\",\n        \"instanceZUID\": \"8-f48cf3a682-7fthvk\",\n        \"appZUID\": \"80-e88f85feec-7rs7sx\",\n        \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n        \"createdAt\": \"2022-04-25T20:47:41.041224162Z\",\n        \"updatedAt\": \"2022-04-25T20:47:41.041228817Z\"\n    }\n}"
            },
            {
              "name": "Install Deleted/Unknown App",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"appZUID\": \"80-e88f85feec-7rs7sy\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 20:49:54 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T20:49:54.315670919Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"message\": \"No Results Found for ZUID: 80-e88f85feec-7rs7sy\"\n}"
            },
            {
              "name": "Install Inaccessible Private App",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"appZUID\": \"80-b0b7babebb-pdj6fj\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 23:13:52 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "168"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T23:13:52.062008225Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"error\": \"Bad Request: validation error: private app\"\n}"
            },
            {
              "name": "Install Invalid App",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"appZUID\": \"invalid_zuid\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Mon, 25 Apr 2022 20:50:59 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "194"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-25T20:50:59.425759041Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"error\": \"Bad Request: invalid or unknown ZUID (invalid_zuid) provided for app\"\n}"
            }
          ]
        },
        {
          "name": "Get App Installs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "app-installs"
              ]
            }
          },
          "response": [
            {
              "name": "Get App Installs",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 26 Apr 2022 19:54:38 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-26T19:54:38.615909188Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": [\n        {\n            \"ZUID\": \"81-d4ff80d1e9-2n6clr\",\n            \"instanceZUID\": \"8-f48cf3a682-7fthvk\",\n            \"appZUID\": \"80-e88f85feec-7rs7sx\",\n            \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n            \"createdAt\": \"2022-04-25T20:47:41Z\",\n            \"updatedAt\": \"2022-04-25T20:47:41Z\"\n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Get App Install",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs/{{install_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "app-installs",
                "{{install_zuid}}"
              ]
            }
          },
          "response": [
            {
              "name": "Get App Install",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs/{{install_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs",
                    "{{install_zuid}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 26 Apr 2022 20:01:50 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-26T20:01:50.556162272Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"81-d4ff80d1e9-2n6clr\",\n        \"instanceZUID\": \"8-f48cf3a682-7fthvk\",\n        \"appZUID\": \"80-e88f85feec-7rs7sx\",\n        \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n        \"createdAt\": \"2022-04-25T20:47:41Z\",\n        \"updatedAt\": \"2022-04-25T20:47:41Z\"\n    }\n}"
            },
            {
              "name": "Get Deleted/Unknown App Install",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs/{{install_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs",
                    "{{install_zuid}}"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 26 Apr 2022 20:03:02 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-26T20:03:02.993646144Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"message\": \"No Results Found for ZUID: 81-d4ff80d1e9-2n6clr\"\n}"
            },
            {
              "name": "Get Invalid App Install",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs/invalid_zuid",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs",
                    "invalid_zuid"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 26 Apr 2022 20:03:46 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "202"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-26T20:03:46.872726906Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"error\": \"Bad Request: invalid or unknown ZUID (invalid_zuid) provided for app-install\"\n}"
            },
            {
              "name": "Get App Install For Invalid Instance",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/invalid_zuid/app-installs/{{install_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "invalid_zuid",
                    "app-installs",
                    "{{install_zuid}}"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 26 Apr 2022 20:04:52 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Content-Length",
                  "value": "199"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-26T20:04:52.305591365Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"error\": \"Bad Request: invalid or unknown ZUID (invalid_zuid) provided for instance\"\n}"
            },
            {
              "name": "Get App Install For Deleted/Unknown Instance",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}2/app-installs/{{install_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}2",
                    "app-installs",
                    "{{install_zuid}}"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 26 Apr 2022 20:06:45 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-26T20:06:45.792274359Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {},\n    \"message\": \"No Results Found for ZUID: 8-f48cf3a682-7fthvk2\"\n}"
            }
          ]
        },
        {
          "name": "Delete App Install",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs/{{install_zuid}}",
              "protocol": "{{protocol}}",
              "host": ["{{accounts_api_url}}"],
              "path": [
                "{{accounts_api_version}}",
                "instances",
                "{{instance_zuid}}",
                "app-installs",
                "{{install_zuid}}"
              ]
            }
          },
          "response": [
            {
              "name": "Delete App Install",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{protocol}}://{{accounts_api_url}}/{{accounts_api_version}}/instances/{{instance_zuid}}/app-installs/{{install_zuid}}",
                  "protocol": "{{protocol}}",
                  "host": ["{{accounts_api_url}}"],
                  "path": [
                    "{{accounts_api_version}}",
                    "instances",
                    "{{instance_zuid}}",
                    "app-installs",
                    "{{install_zuid}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Tue, 26 Apr 2022 20:02:49 GMT"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Access-Control-Allow-Credentials",
                  "value": "true"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Cookie, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-Auth"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "PUT, POST, GET, PATCH, DELETE, OPTIONS"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "key": "Content-Security-Policy",
                  "value": ""
                },
                {
                  "key": "Feature-Policy",
                  "value": ""
                },
                {
                  "key": "Referrer-Policy",
                  "value": "no-referrer-when-downgrade"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "sameorigin"
                },
                {
                  "key": "X-Permitted-Cross-Domain-Policies",
                  "value": ""
                },
                {
                  "key": "X-Xss-Protection",
                  "value": "1;mode=block"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Via",
                  "value": "1.1 google"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                }
              ],
              "cookie": [],
              "body": "{\n    \"_meta\": {\n        \"timestamp\": \"2022-04-26T20:02:49.517338985Z\",\n        \"totalResults\": 1,\n        \"start\": 0,\n        \"offset\": 0,\n        \"limit\": 1\n    },\n    \"data\": {\n        \"ZUID\": \"81-d4ff80d1e9-2n6clr\",\n        \"instanceZUID\": \"8-f48cf3a682-7fthvk\",\n        \"appZUID\": \"80-e88f85feec-7rs7sx\",\n        \"createdByUserZUID\": \"5-bae188a3d8-bnwbk1\",\n        \"createdAt\": \"2022-04-25T20:47:41Z\",\n        \"updatedAt\": \"2022-04-25T20:47:41Z\"\n    }\n}"
            }
          ]
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{APP_SID}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ]
}
